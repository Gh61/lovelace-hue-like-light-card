{
    "env": {
        "browser": true,
        "es2021": true
    },
    "extends": [
        "plugin:@typescript-eslint/recommended", // Uses the recommended rules from the @typescript-eslint/eslint-plugin
        "airbnb-typescript"
    ],
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "ecmaVersion": 2020,
        "sourceType": "module",
        "project": "./tsconfig.json"
    },
    "plugins": [
        "@typescript-eslint"
    ],
    "ignorePatterns": [
        "**/languages/*.json"
    ],
    "rules": {
        "@typescript-eslint/no-non-null-assertion": "off",
        "linebreak-style": ["error", "unix"],
        "@typescript-eslint/indent": ["error", 4],
        "@typescript-eslint/comma-dangle": ["error", "never"],
        // is not working very well, replace soon with https://typescript-eslint.io/rules/naming-convention/
        "no-underscore-dangle": ["error", {
            "allow": ["_containers", "_args", "_instance", "_isMouseDown", "_wrapper", "_lastHash", "_isHistoryOverriden", "_registeredCards" ], // allow static members, private (field) getters
            "allowAfterThis": true,
            "enforceInMethodNames": true,
            "allowFunctionParams": false
        }],
        "@typescript-eslint/no-unused-expressions": ["error", { "allowShortCircuit":true }],
        "@typescript-eslint/lines-between-class-members": "off",
        "@typescript-eslint/keyword-spacing": ["error", {"overrides": { "this": { "before": false }}}],
        "@typescript-eslint/explicit-member-accessibility": "error",
        "@typescript-eslint/brace-style": ["error", "stroustrup"],

        "react/jsx-filename-extension": "off",
        "import/extensions": "off",
        "import/no-extraneous-dependencies": "off",

        // allow private empty ctor
        "@typescript-eslint/no-empty-function": [
            "error",
            {
                "allow": [
                    "functions",
                    "methods",
                    "private-constructors",
                    "protected-constructors"
                ]
            }
        ],

        // unused variables for interface
        "@typescript-eslint/no-unused-vars": [
            "error",
            {
              "argsIgnorePattern": "^_" // dont_throw unused on arguments starting with underscore
            }
        ],

        // no this. in static calls
        "no-restricted-syntax": ["error", {
            "selector": "MethodDefinition[static = true] ThisExpression",
            "message": "this.member is prohibited for static members. Only ClassName.member is allowed."
        }],

        "@typescript-eslint/no-use-before-define": ["error", {
            "functions": true,
            "classes": false, // Allow use of classes defined under
            "variables": true,
            "allowNamedExports": false
        }]
    }
}
